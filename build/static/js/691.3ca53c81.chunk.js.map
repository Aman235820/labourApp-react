{"version":3,"file":"static/js/691.3ca53c81.chunk.js","mappings":"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","sources":["components/LabourRegister.js","services/labourService.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Container, Form, Button, Card, Alert, Row, Col, Spinner, InputGroup } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { labourService } from '../services/labourService';\r\nimport { FaUser, FaTools, FaPhone, FaKey, FaEye, FaEyeSlash, FaArrowRight, FaExclamationCircle, FaCheckCircle } from 'react-icons/fa';\r\nimport Select from 'react-select';\r\nimport '../styles/LabourRegister.css';\r\n\r\nfunction LabourRegister() {\r\n  const navigate = useNavigate();\r\n  const [formData, setFormData] = useState({\r\n    labourName: '',\r\n    labourSkill: '',\r\n    labourSubSkill: [],\r\n    labourMobileNo: ''\r\n  });\r\n  const [otp, setOtp] = useState('');\r\n  const [otpStatus, setOtpStatus] = useState('');\r\n  const [otpLoading, setOtpLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [services, setServices] = useState([]);\r\n  const [selectedService, setSelectedService] = useState(null);\r\n  const [showOtp, setShowOtp] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Fetch services data\r\n    fetch('/services.json')\r\n      .then(response => response.json())\r\n      .then(data => setServices(data.services))\r\n      .catch(error => console.error('Error loading services:', error));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      const timer = setTimeout(() => setError(''), 2000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [error]);\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      const timer = setTimeout(() => setSuccess(''), 2000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [success]);\r\n\r\n  useEffect(() => {\r\n    if (otpStatus && otpStatus.toLowerCase().includes('success')) {\r\n      const timer = setTimeout(() => setOtpStatus(''), 2000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [otpStatus]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n    if (name === 'labourSkill') {\r\n      const service = services.find(s => s.name === value);\r\n      setSelectedService(service);\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        labourSubSkill: []\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSubSkillChange = (selectedOptions) => {\r\n    if (selectedOptions && selectedOptions.some(option => option.value === 'all')) {\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        labourSubSkill: selectedService.subCategories\r\n      }));\r\n    } else {\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        labourSubSkill: selectedOptions ? selectedOptions.map(option => option.value) : []\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleRequestOTP = async () => {\r\n    setOtpStatus('');\r\n    setOtpLoading(true);\r\n    const mobile = formData.labourMobileNo;\r\n    if (!mobile || !/^[0-9]{10}$/.test(mobile)) {\r\n      setOtpStatus('Please enter a valid 10-digit mobile number before requesting OTP.');\r\n      setOtpLoading(false);\r\n      return;\r\n    }\r\n    try {\r\n      await labourService.requestOTP(mobile, 'LABOUR');\r\n      setOtpStatus('OTP sent successfully!');\r\n    } catch (err) {\r\n      setOtpStatus(err.message || 'Failed to send OTP.');\r\n    } finally {\r\n      setOtpLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setSuccess('');\r\n    setIsLoading(true);\r\n    if (selectedService && formData.labourSubSkill.length === 0) {\r\n      setError('Please select at least one sub skill.');\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n    try {\r\n      // Prepare subSkills array for API\r\n      const labourData = {\r\n        labourName: formData.labourName,\r\n        labourSkill: formData.labourSkill,\r\n        labourSubSkills: formData.labourSubSkill.map(subSkill => ({ subSkillName: subSkill })),\r\n        labourMobileNo: formData.labourMobileNo\r\n      };\r\n      const response = await labourService.registerLabour(labourData, otp);\r\n      if (response.token && response.returnValue) {\r\n        // Filter out reviews data before storing in localStorage\r\n        const { reviews, ...labourDataWithoutReviews } = response.returnValue;\r\n        localStorage.setItem('labour', JSON.stringify({ ...labourDataWithoutReviews, token: response.token }));\r\n        navigate('/labourDashboard');\r\n      } else {\r\n        setError('Registration failed. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      setError('Registration failed. Please try again.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className=\"mt-5 mb-5\">\r\n      <Row className=\"justify-content-center\">\r\n        <Col md={8} lg={6}>\r\n          <Card className=\"shadow-lg border-0\">\r\n            <Card.Body className=\"p-5\">\r\n              <div className=\"text-center mb-4\">\r\n                <h2 className=\"fw-bold text-primary\">Labour Registration</h2>\r\n                <p className=\"text-muted\">Join InstaLab as a skilled professional</p>\r\n              </div>\r\n              {error && (\r\n                <div className=\"alert alert-danger d-flex align-items-center\" role=\"alert\">\r\n                  <FaExclamationCircle className=\"me-2\" />\r\n                  {error}\r\n                </div>\r\n              )}\r\n              {success && (\r\n                <div className=\"alert alert-success d-flex align-items-center\" role=\"alert\">\r\n                  <FaCheckCircle className=\"me-2\" />\r\n                  {success}\r\n                </div>\r\n              )}\r\n              <Form onSubmit={handleSubmit}>\r\n                <Form.Group className=\"mb-4\">\r\n                  <div className=\"d-flex align-items-center\">\r\n                    <FaUser className=\"me-2\" />\r\n                    <Form.Label className=\"fw-bold mb-0\">Full Name</Form.Label>\r\n                  </div>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"labourName\"\r\n                    value={formData.labourName}\r\n                    onChange={handleChange}\r\n                    required\r\n                    className=\"form-control-lg\"\r\n                    placeholder=\"Enter your full name\"\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-4\">\r\n                  <div className=\"d-flex align-items-center\">\r\n                    <FaTools className=\"me-2\" />\r\n                    <Form.Label className=\"fw-bold mb-0\">Main Skill</Form.Label>\r\n                  </div>\r\n                  <Form.Select\r\n                    name=\"labourSkill\"\r\n                    value={formData.labourSkill}\r\n                    onChange={handleChange}\r\n                    required\r\n                    className=\"form-control-lg\"\r\n                  >\r\n                    <option value=\"\">Select your main skill</option>\r\n                    {services.map((service, index) => (\r\n                      <option key={index} value={service.name}>\r\n                        {service.name}\r\n                      </option>\r\n                    ))}\r\n                  </Form.Select>\r\n                </Form.Group>\r\n                {selectedService && (\r\n                  <Form.Group className=\"mb-4\">\r\n                    <div className=\"d-flex align-items-center\">\r\n                      <FaTools className=\"me-2\" />\r\n                      <Form.Label className=\"fw-bold mb-0\">Sub Skill</Form.Label>\r\n                    </div>\r\n                    <Select\r\n                      name=\"labourSubSkill\"\r\n                      isMulti\r\n                      options={[\r\n                        { value: 'all', label: 'Select All' },\r\n                        ...selectedService.subCategories.map(subCategory => ({\r\n                          value: subCategory,\r\n                          label: subCategory\r\n                        }))\r\n                      ]}\r\n                      onChange={handleSubSkillChange}\r\n                      value={formData.labourSubSkill.map(subCategory => ({\r\n                        value: subCategory,\r\n                        label: subCategory\r\n                      }))}\r\n                      className=\"basic-multi-select\"\r\n                      classNamePrefix=\"select\"\r\n                      placeholder=\"Select your sub skills\"\r\n                      menuPortalTarget={document.body}\r\n                      styles={{ menuPortal: base => ({ ...base, zIndex: 9999 }) }}\r\n                    />\r\n                  </Form.Group>\r\n                )}\r\n                <Form.Group className=\"mb-4\">\r\n                  <div className=\"d-flex align-items-center\">\r\n                    <FaPhone className=\"me-2\" />\r\n                    <Form.Label className=\"fw-bold mb-0\">Mobile Number</Form.Label>\r\n                  </div>\r\n                  <InputGroup>\r\n                    <Form.Control\r\n                      type=\"tel\"\r\n                      name=\"labourMobileNo\"\r\n                      value={formData.labourMobileNo}\r\n                      onChange={(e) => {\r\n                        const value = e.target.value.replace(/\\D/g, '').slice(0, 10);\r\n                        setFormData({\r\n                          ...formData,\r\n                          labourMobileNo: value\r\n                        });\r\n                      }}\r\n                      required\r\n                      pattern=\"[0-9]{10}\"\r\n                      className=\"form-control-lg\"\r\n                      placeholder=\"Enter 10-digit mobile number\"\r\n                      maxLength=\"10\"\r\n                    />\r\n                    <Button\r\n                      variant=\"outline-primary\"\r\n                      type=\"button\"\r\n                      onClick={handleRequestOTP}\r\n                      disabled={otpLoading}\r\n                    >\r\n                      {otpLoading ? 'Sending OTP...' : 'Request OTP'}\r\n                    </Button>\r\n                  </InputGroup>\r\n                  {otpStatus && (\r\n                    <Form.Text className={otpStatus.includes('success') ? 'text-success' : 'text-danger'}>\r\n                      {otpStatus}\r\n                    </Form.Text>\r\n                  )}\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-4\">\r\n                  <div className=\"d-flex align-items-center\">\r\n                    <FaKey className=\"me-2\" />\r\n                    <Form.Label className=\"fw-bold mb-0\">OTP</Form.Label>\r\n                  </div>\r\n                  <InputGroup>\r\n                    <Form.Control\r\n                      type={showOtp ? \"text\" : \"password\"}\r\n                      placeholder=\"Enter OTP\"\r\n                      value={otp}\r\n                      onChange={e => setOtp(e.target.value.replace(/\\D/g, '').slice(0, 6))}\r\n                      className=\"form-control-lg\"\r\n                      maxLength=\"6\"\r\n                      required\r\n                    />\r\n                    <Button\r\n                      variant=\"outline-secondary\"\r\n                      type=\"button\"\r\n                      onClick={() => setShowOtp(v => !v)}\r\n                      tabIndex={-1}\r\n                    >\r\n                      {showOtp ? <FaEyeSlash /> : <FaEye />}\r\n                    </Button>\r\n                  </InputGroup>\r\n                </Form.Group>\r\n                <div className=\"d-grid gap-2\">\r\n                  <Button \r\n                    variant=\"primary\" \r\n                    type=\"submit\" \r\n                    className=\"btn-lg fw-bold d-flex align-items-center justify-content-center\"\r\n                    disabled={isLoading}\r\n                  >\r\n                    {isLoading ? (\r\n                      <>\r\n                        <Spinner\r\n                          as=\"span\"\r\n                          animation=\"border\"\r\n                          size=\"sm\"\r\n                          role=\"status\"\r\n                          aria-hidden=\"true\"\r\n                          className=\"me-2\"\r\n                        />\r\n                        Creating Account...\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        Create Account <FaArrowRight className=\"ms-2\" />\r\n                      </>\r\n                    )}\r\n                  </Button>\r\n                </div>\r\n                <div className=\"text-center mt-4\">\r\n                  <p className=\"mb-0\">\r\n                    Already have an account?{' '}\r\n                    <Button \r\n                      variant=\"link\" \r\n                      className=\"p-0 text-decoration-none\"\r\n                      onClick={() => navigate('/labourLogin')}\r\n                    >\r\n                      Login here\r\n                    </Button>\r\n                  </p>\r\n                </div>\r\n              </Form>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default LabourRegister; ","import axios from 'axios';\r\n\r\nconst appUrl = process.env.REACT_APP_API_BASEURL;\r\nconst baseurl = `${appUrl}/labourapp`;\r\n\r\nexport const labourService = {\r\n  // Get requested services for a labour\r\n  getRequestedServices: async (labourId) => {\r\n    try {\r\n      const endpoint = `${baseurl}/labour/showRequestedServices/${labourId}`;\r\n      const response = await axios.get(endpoint);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Get reviews for a labour\r\n  getReviews: async (labourId, sortBy = 'reviewTime', sortOrder = 'desc') => {\r\n    try {\r\n      const endpoint = `${baseurl}/labour/showMyReviews/${labourId}?sortBy=${sortBy}&sortOrder=${sortOrder}`;\r\n      \r\n      // Get auth token if available (you might need to adjust this based on your auth implementation)\r\n      const storedUser = localStorage.getItem('user');\r\n      const token = localStorage.getItem('token') || localStorage.getItem('authToken');\r\n      \r\n      const headers = {};\r\n      if (token) {\r\n        headers.Authorization = `Bearer ${token}`;\r\n      } else if (storedUser) {\r\n        // Try to get token from user object\r\n        const userData = JSON.parse(storedUser);\r\n        if (userData.token) {\r\n          headers.Authorization = `Bearer ${userData.token}`;\r\n        }\r\n      }\r\n      \r\n      const response = await axios.get(endpoint, { headers });\r\n      \r\n      // Check if the API returned an error\r\n      if (response.data.hasError) {\r\n        throw new Error(response.data.message || 'Failed to fetch reviews');\r\n      }\r\n      \r\n      // Return the actual data from returnValue\r\n      return response.data.returnValue || [];\r\n    } catch (error) {\r\n      console.error('Reviews API error:', error.message);\r\n      // Return empty array instead of throwing to prevent breaking the page\r\n      return [];\r\n    }\r\n  },\r\n\r\n  // Get overall ratings for a labour\r\n  getOverallRatings: async (labourId) => {\r\n    try {\r\n      const endpoint = `${baseurl}/labour/showMyRatings/${labourId}`;\r\n      const response = await axios.get(endpoint);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Update booking status\r\n  updateBookingStatus: async (labourId, bookingId, bookingStatusCode) => {\r\n    try {\r\n      const endpoint = `${baseurl}/labour/setBookingStatus?labourId=${labourId}&bookingId=${bookingId}&bookingStatusCode=${bookingStatusCode}`;\r\n      const response = await axios.get(endpoint);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Show requested services\r\n  showRequestedServices: async (labourId) => {\r\n    try {\r\n      const endpoint = `${baseurl}/labour/showRequestedServices/${labourId}`;\r\n      const response = await axios.get(endpoint);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getLabourById: async (labourId) => {\r\n    try {\r\n      const endpoint = `${baseurl}/labourReq/getLabourById/${labourId}`;\r\n      const response = await axios.get(endpoint);\r\n      \r\n      // Check if the API returned an error\r\n      if (response.data.hasError) {\r\n        throw new Error(response.data.message || 'Failed to fetch labour details');\r\n      }\r\n      \r\n      // Return the actual data from returnValue\r\n      return response.data.returnValue;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  registerLabour: async (labourData, otp) => {\r\n    try {\r\n      const endpoint = `${baseurl}/auth/registerLabour?otp=${otp}`;\r\n      const response = await axios.post(endpoint, labourData);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || error.message;\r\n    }\r\n  },\r\n\r\n  loginLabour: async (mobileNumber, otp) => {\r\n    try {\r\n      const endpoint = `${baseurl}/auth/labourLogin?mobileNumber=${mobileNumber}&otp=${otp}`;\r\n      const response = await axios.get(endpoint);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || error.message;\r\n    }\r\n  },\r\n\r\n  requestOTP: async (mobile, role) => {\r\n    try {\r\n      const endpoint = `${baseurl}/auth/requestOTP`;\r\n      const response = await axios.post(endpoint, { mobile, role });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || error.message;\r\n    }\r\n  },\r\n\r\n  deleteLabour: async (labourId) => {\r\n    try {\r\n      const endpoint = `${baseurl}/admin/removeLabour/${labourId}`;\r\n      const response = await axios.delete(endpoint);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || error.message;\r\n    }\r\n  },\r\n\r\n  // Update labour details\r\n  updateLabourDetails: async (labourData) => {\r\n    try {\r\n      const endpoint = `${baseurl}/labour/updateLabourDetails`;\r\n      const response = await axios.patch(endpoint, labourData);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || error.message;\r\n    }\r\n  }\r\n};\r\n\r\n"],"names":["navigate","useNavigate","formData","setFormData","useState","labourName","labourSkill","labourSubSkill","labourMobileNo","otp","setOtp","otpStatus","setOtpStatus","otpLoading","setOtpLoading","error","setError","success","setSuccess","isLoading","setIsLoading","services","setServices","selectedService","setSelectedService","showOtp","setShowOtp","useEffect","fetch","then","response","json","data","catch","console","timer","setTimeout","clearTimeout","toLowerCase","includes","handleChange","e","name","value","target","prev","_objectSpread","service","find","s","_jsx","Container","className","children","Row","Col","md","lg","Card","_jsxs","Body","role","FaExclamationCircle","FaCheckCircle","Form","onSubmit","async","preventDefault","length","labourData","labourSubSkills","map","subSkill","subSkillName","labourService","registerLabour","token","returnValue","_response$returnValue","reviews","labourDataWithoutReviews","_objectWithoutProperties","_excluded","localStorage","setItem","JSON","stringify","Group","FaUser","Label","Control","type","onChange","required","placeholder","FaTools","Select","index","isMulti","options","label","subCategories","subCategory","selectedOptions","some","option","classNamePrefix","menuPortalTarget","document","body","styles","menuPortal","base","zIndex","FaPhone","InputGroup","replace","slice","pattern","maxLength","Button","variant","onClick","mobile","test","requestOTP","err","message","disabled","Text","FaKey","v","tabIndex","FaEyeSlash","FaEye","_Fragment","Spinner","as","animation","size","FaArrowRight","baseurl","concat","process","getRequestedServices","endpoint","labourId","axios","get","getReviews","sortBy","arguments","undefined","sortOrder","storedUser","getItem","headers","Authorization","userData","parse","hasError","Error","getOverallRatings","updateBookingStatus","bookingId","bookingStatusCode","showRequestedServices","getLabourById","post","_error$response","loginLabour","mobileNumber","_error$response2","_error$response3","deleteLabour","delete","_error$response4","updateLabourDetails","patch","_error$response5"],"sourceRoot":""}