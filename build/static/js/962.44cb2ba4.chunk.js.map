{"version":3,"file":"static/js/962.44cb2ba4.chunk.js","mappings":"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","sources":["services/adminService.js","components/BookingDetailsModal.js","components/AdminStats.js","components/AdminDashboard.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst appUrl = process.env.REACT_APP_API_BASEURL;\r\nconst baseurl = `${appUrl}/labourapp`;\r\n\r\nexport const adminService = {\r\n  getAllLabours: async (pageNumber, pageSize, sortBy, sortOrder) => {\r\n    const endpoint = `${baseurl}/admin/getAllLabours`;\r\n    const response = await axios.post(endpoint, {\r\n      pageNumber,\r\n      pageSize,\r\n      sortBy,\r\n      sortOrder\r\n    }, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    return response.data;\r\n  },\r\n\r\n  getLabourById: async (labourId) => {\r\n    const endpoint = `${baseurl}/labourReq/getLabourById/${labourId}`;\r\n    const response = await axios.get(endpoint);\r\n    return response.data;\r\n  },\r\n\r\n  getAllUsers: async (pageNumber, pageSize, sortBy, sortOrder) => {\r\n    const endpoint = `${baseurl}/admin/getAllUsers`;\r\n    const response = await axios.post(endpoint, {\r\n      pageNumber: pageNumber,\r\n      pageSize: pageSize,\r\n      sortBy: sortBy,\r\n      sortOrder: sortOrder,\r\n    });\r\n    return response.data;\r\n  },\r\n\r\n  removeLabour: async (labourId) => {\r\n    const endpoint = `${baseurl}/admin/removeLabour/${labourId}`;\r\n    const response = await axios.delete(endpoint);\r\n    return response.data;\r\n  },\r\n\r\n  removeUser: async (userId) => {\r\n    const endpoint = `${baseurl}/admin/removeUser/${userId}`;\r\n    const response = await axios.delete(endpoint);\r\n    return response.data;\r\n  },\r\n\r\n  getAllBookings: async (pageNumber, pageSize, sortBy, sortOrder) => {\r\n    const endpoint = `${baseurl}/admin/getAllBookings`;\r\n    const response = await axios.post(endpoint, {\r\n      pageNumber: pageNumber,\r\n      pageSize: pageSize,\r\n      sortBy: sortBy,\r\n      sortOrder: sortOrder,\r\n    });\r\n    return response.data;\r\n  },\r\n\r\n  deleteBooking: async (bookingId) => {\r\n    const endpoint = `${baseurl}/admin/deleteBooking/${bookingId}`;\r\n    const response = await axios.delete(endpoint, {\r\n      data: ''  // Adding empty data as per the API specification\r\n    });\r\n    return response.data;\r\n  },\r\n\r\n  getAppStats: async () => {\r\n    const endpoint = `${baseurl}/admin/getAppStats`;\r\n    const response = await axios.get(endpoint);\r\n    return response.data;\r\n  },\r\n\r\n  uploadLabours: async (file) => {\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    \r\n    const endpoint = `${baseurl}/admin/uploadLabours`;\r\n    const response = await axios.post(endpoint, formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n    return response.data;\r\n  },\r\n}; ","import React from 'react';\r\nimport { Modal, Button, Badge, Card } from 'react-bootstrap';\r\nimport { FaTimesCircle, FaClock, FaCheckCircle } from 'react-icons/fa';\r\n\r\nconst BookingDetailsModal = ({ isOpen, toggle, booking }) => {\r\n  const getStatusBadge = (statusCode) => {\r\n    switch (statusCode) {\r\n      case -1:\r\n        return <Badge bg=\"danger\" className=\"px-3 py-2\"><FaTimesCircle className=\"me-1\" /> Rejected</Badge>;\r\n      case 0:\r\n        return <Badge bg=\"secondary\" className=\"px-3 py-2\"><FaClock className=\"me-1\" /> Unknown</Badge>;\r\n      case 1:\r\n        return <Badge bg=\"warning\" className=\"px-3 py-2\"><FaClock className=\"me-1\" /> Pending</Badge>;\r\n      case 2:\r\n        return <Badge bg=\"primary\" className=\"px-3 py-2\"><FaCheckCircle className=\"me-1\" /> Accepted</Badge>;\r\n      case 3:\r\n        return <Badge bg=\"success\" className=\"px-3 py-2\"><FaClock className=\"me-1\" /> Completed</Badge>;\r\n      default:\r\n        return <Badge bg=\"secondary\" className=\"px-3 py-2\"><FaClock className=\"me-1\" /> Unknown</Badge>;\r\n    }\r\n  };\r\n\r\n  if (!booking) return null;\r\n\r\n  return (\r\n    <Modal show={isOpen} onHide={toggle} size=\"lg\" centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Booking Details (ID: {booking.bookingId})</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div className=\"row g-4\">\r\n          <div className=\"col-md-6\">\r\n            <Card className=\"shadow-sm border-0 h-100\">\r\n              <Card.Body>\r\n                <h5 className=\"mb-3 text-primary\">User Information</h5>\r\n                <div className=\"mb-2\"><strong>Name: </strong>{booking.userName}</div>\r\n                <div className=\"mb-2\"><strong>Mobile: </strong><span className=\"badge bg-info text-dark\">{booking.userMobileNumber}</span></div>\r\n                <div className=\"mb-2\"><strong>User ID: </strong><span className=\"badge bg-secondary\">{booking.userId}</span></div>\r\n              </Card.Body>\r\n            </Card>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <Card className=\"shadow-sm border-0 h-100\">\r\n              <Card.Body>\r\n                <h5 className=\"mb-3 text-primary\">Labour Information</h5>\r\n                <div className=\"mb-2\"><strong>Name: </strong>{booking.labourName}</div>\r\n                <div className=\"mb-2\"><strong>Mobile: </strong><span className=\"badge bg-info text-dark\">{booking.labourMobileNo}</span></div>\r\n                <div className=\"mb-2\"><strong>Labour ID: </strong><span className=\"badge bg-secondary\">{booking.labourId}</span></div>\r\n                <div className=\"mb-2\"><strong>Service: </strong><span className=\"badge bg-info text-dark\">{booking.labourSkill}</span></div>\r\n              </Card.Body>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <Card className=\"shadow-sm border-0 mt-3\">\r\n          <Card.Body>\r\n            <h5 className=\"mb-3 text-primary\">Booking Information</h5>\r\n            <div className=\"mb-2\"><strong>Booking Time: </strong>{booking.bookingTime ? new Date(booking.bookingTime).toLocaleString() : 'N/A'}</div>\r\n            <div className=\"mb-2\"><strong>Status: </strong>{getStatusBadge(booking.bookingStatusCode)}</div>\r\n          </Card.Body>\r\n        </Card>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={toggle}>\r\n          Close\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default BookingDetailsModal; ","import React, { useState, useEffect } from 'react';\r\nimport { Card, Row, Col, Spinner, Alert, ProgressBar, Badge } from 'react-bootstrap';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  ArcElement,\r\n  PointElement,\r\n  LineElement,\r\n  Filler,\r\n} from 'chart.js';\r\nimport { Bar, Doughnut, Line } from 'react-chartjs-2';\r\nimport { \r\n  FaStar, \r\n  FaUsers, \r\n  FaUserTie, \r\n  FaClipboardList, \r\n  FaChartLine,\r\n  FaArrowUp,\r\n  FaArrowDown,\r\n  FaCheckCircle,\r\n  FaClock,\r\n  FaTimesCircle\r\n} from 'react-icons/fa';\r\nimport { adminService } from '../services/adminService';\r\nimport '../styles/AdminStats.css';\r\n\r\n// Register ChartJS components\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  ArcElement,\r\n  PointElement,\r\n  LineElement,\r\n  Filler\r\n);\r\n\r\nconst AdminStats = () => {\r\n  const [stats, setStats] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchStats();\r\n  }, []);\r\n\r\n  const fetchStats = async () => {\r\n    try {\r\n      const response = await adminService.getAppStats();\r\n      if (response && !response.hasError) {\r\n        setStats(response.returnValue);\r\n      } else {\r\n        setError('Failed to fetch stats');\r\n      }\r\n    } catch (err) {\r\n      setError('Error fetching stats');\r\n      console.error('Error fetching stats:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"stats-loading\">\r\n        <div className=\"text-center py-5\">\r\n          <Spinner animation=\"border\" role=\"status\" variant=\"primary\">\r\n            <span className=\"visually-hidden\">Loading...</span>\r\n          </Spinner>\r\n          <p className=\"mt-3 text-muted\">Loading analytics...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Alert variant=\"danger\" className=\"stats-error\">\r\n        <FaTimesCircle className=\"me-2\" />\r\n        {error}\r\n      </Alert>\r\n    );\r\n  }\r\n\r\n  if (!stats) {\r\n    return (\r\n      <Alert variant=\"warning\" className=\"stats-error\">\r\n        <FaClock className=\"me-2\" />\r\n        No statistics available\r\n      </Alert>\r\n    );\r\n  }\r\n\r\n  // Calculate total counts\r\n  const totalUsers = stats.totalUsers || 0;\r\n  const totalLabours = stats.totalLabours || 0;\r\n  const totalBookings = stats.totalBookings || 0;\r\n  const totalRevenue = stats.totalRevenue || 0;\r\n\r\n  // Calculate growth percentages (mock data for now)\r\n  const userGrowth = 12.5;\r\n  const labourGrowth = 8.3;\r\n  const bookingGrowth = 15.7;\r\n  const revenueGrowth = 22.1;\r\n\r\n  // Booking Status Data\r\n  const bookingStatusData = {\r\n    labels: ['Completed', 'Pending', 'Accepted', 'Rejected'],\r\n    datasets: [{\r\n      data: [\r\n        stats.bookingStatusStats?.completed || 0,\r\n        stats.bookingStatusStats?.pending || 0,\r\n        stats.bookingStatusStats?.accepted || 0,\r\n        stats.bookingStatusStats?.rejected || 0\r\n      ],\r\n      backgroundColor: [\r\n        '#10b981', // Green\r\n        '#f59e0b', // Yellow\r\n        '#3b82f6', // Blue\r\n        '#ef4444'  // Red\r\n      ],\r\n      borderWidth: 2,\r\n      borderColor: '#ffffff',\r\n      hoverBorderWidth: 3,\r\n    }]\r\n  };\r\n\r\n  // Rating Distribution Data\r\n  const ratingData = {\r\n    labels: ['5 Stars', '4 Stars', '3 Stars', '2 Stars', '1 Star'],\r\n    datasets: [{\r\n      data: [\r\n        stats.labourRatingStats?.rating_5 || 0,\r\n        stats.labourRatingStats?.rating_4 || 0,\r\n        stats.labourRatingStats?.rating_3 || 0,\r\n        stats.labourRatingStats?.rating_2 || 0,\r\n        stats.labourRatingStats?.rating_1 || 0\r\n      ],\r\n      backgroundColor: [\r\n        '#10b981', // Green\r\n        '#3b82f6', // Blue\r\n        '#f59e0b', // Yellow\r\n        '#f97316', // Orange\r\n        '#ef4444'  // Red\r\n      ],\r\n      borderWidth: 2,\r\n      borderColor: '#ffffff',\r\n    }]\r\n  };\r\n\r\n  // Skill Distribution Data\r\n  const skillData = {\r\n    labels: Object.keys(stats.availableSkillStats || {}),\r\n    datasets: [{\r\n      label: 'Available Labourers',\r\n      data: Object.values(stats.availableSkillStats || {}),\r\n      backgroundColor: 'rgba(59, 130, 246, 0.8)',\r\n      borderColor: '#3b82f6',\r\n      borderWidth: 2,\r\n      borderRadius: 8,\r\n      borderSkipped: false,\r\n    }]\r\n  };\r\n\r\n  // Revenue Trend Data (mock data)\r\n  const revenueData = {\r\n    labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],\r\n    datasets: [{\r\n      label: 'Revenue',\r\n      data: [12000, 15000, 18000, 22000, 25000, 28000],\r\n      borderColor: '#10b981',\r\n      backgroundColor: 'rgba(16, 185, 129, 0.1)',\r\n      borderWidth: 3,\r\n      fill: true,\r\n      tension: 0.4,\r\n    }]\r\n  };\r\n\r\n  const chartOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        display: false\r\n      },\r\n      tooltip: {\r\n        backgroundColor: 'rgba(0, 0, 0, 0.8)',\r\n        titleColor: '#ffffff',\r\n        bodyColor: '#ffffff',\r\n        borderColor: '#3b82f6',\r\n        borderWidth: 1,\r\n        cornerRadius: 8,\r\n        displayColors: true,\r\n      }\r\n    },\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n        ticks: {\r\n          stepSize: 1,\r\n          color: '#64748b'\r\n        },\r\n        grid: {\r\n          color: '#e2e8f0'\r\n        }\r\n      },\r\n      x: {\r\n        ticks: {\r\n          color: '#64748b'\r\n        },\r\n        grid: {\r\n          color: '#e2e8f0'\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const doughnutOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        position: 'bottom',\r\n        labels: {\r\n          padding: 20,\r\n          usePointStyle: true,\r\n          font: {\r\n            size: 12\r\n          }\r\n        }\r\n      },\r\n      tooltip: {\r\n        backgroundColor: 'rgba(0, 0, 0, 0.8)',\r\n        titleColor: '#ffffff',\r\n        bodyColor: '#ffffff',\r\n        borderColor: '#3b82f6',\r\n        borderWidth: 1,\r\n        cornerRadius: 8,\r\n      }\r\n    }\r\n  };\r\n\r\n  const lineOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        display: false\r\n      },\r\n      tooltip: {\r\n        backgroundColor: 'rgba(0, 0, 0, 0.8)',\r\n        titleColor: '#ffffff',\r\n        bodyColor: '#ffffff',\r\n        borderColor: '#10b981',\r\n        borderWidth: 1,\r\n        cornerRadius: 8,\r\n      }\r\n    },\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n        ticks: {\r\n          color: '#64748b',\r\n          callback: function(value) {\r\n            return '₹' + value.toLocaleString();\r\n          }\r\n        },\r\n        grid: {\r\n          color: '#e2e8f0'\r\n        }\r\n      },\r\n      x: {\r\n        ticks: {\r\n          color: '#64748b'\r\n        },\r\n        grid: {\r\n          color: '#e2e8f0'\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin-stats\">\r\n      {/* Key Metrics Cards */}\r\n      <Row className=\"g-4 mb-4\">\r\n        <Col lg={3} md={6}>\r\n          <Card className=\"metric-card\">\r\n            <Card.Body>\r\n              <div className=\"d-flex justify-content-between align-items-center\">\r\n                <div>\r\n                  <h6 className=\"metric-label\">Total Users</h6>\r\n                  <h3 className=\"metric-value\">{totalUsers.toLocaleString()}</h3>\r\n                  <div className=\"d-flex align-items-center\">\r\n                    <FaArrowUp className=\"text-success me-1\" />\r\n                    <small className=\"text-success\">+{userGrowth}%</small>\r\n                  </div>\r\n                </div>\r\n                <div className=\"metric-icon users-icon\">\r\n                  <FaUsers />\r\n                </div>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n        <Col lg={3} md={6}>\r\n          <Card className=\"metric-card\">\r\n            <Card.Body>\r\n              <div className=\"d-flex justify-content-between align-items-center\">\r\n                <div>\r\n                  <h6 className=\"metric-label\">Total Labourers</h6>\r\n                  <h3 className=\"metric-value\">{totalLabours.toLocaleString()}</h3>\r\n                  <div className=\"d-flex align-items-center\">\r\n                    <FaArrowUp className=\"text-success me-1\" />\r\n                    <small className=\"text-success\">+{labourGrowth}%</small>\r\n                  </div>\r\n                </div>\r\n                <div className=\"metric-icon labourers-icon\">\r\n                  <FaUserTie />\r\n                </div>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n        <Col lg={3} md={6}>\r\n          <Card className=\"metric-card\">\r\n            <Card.Body>\r\n              <div className=\"d-flex justify-content-between align-items-center\">\r\n                <div>\r\n                  <h6 className=\"metric-label\">Total Bookings</h6>\r\n                  <h3 className=\"metric-value\">{totalBookings.toLocaleString()}</h3>\r\n                  <div className=\"d-flex align-items-center\">\r\n                    <FaArrowUp className=\"text-success me-1\" />\r\n                    <small className=\"text-success\">+{bookingGrowth}%</small>\r\n                  </div>\r\n                </div>\r\n                <div className=\"metric-icon bookings-icon\">\r\n                  <FaClipboardList />\r\n                </div>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n        <Col lg={3} md={6}>\r\n          <Card className=\"metric-card\">\r\n            <Card.Body>\r\n              <div className=\"d-flex justify-content-between align-items-center\">\r\n                <div>\r\n                  <h6 className=\"metric-label\">Total Revenue</h6>\r\n                  <h3 className=\"metric-value\">₹{totalRevenue.toLocaleString()}</h3>\r\n                  <div className=\"d-flex align-items-center\">\r\n                    <FaArrowUp className=\"text-success me-1\" />\r\n                    <small className=\"text-success\">+{revenueGrowth}%</small>\r\n                  </div>\r\n                </div>\r\n                <div className=\"metric-icon revenue-icon\">\r\n                  <FaChartLine />\r\n                </div>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Charts Section */}\r\n      <Row className=\"g-4\">\r\n        <Col lg={6} md={12}>\r\n          <Card className=\"chart-card\">\r\n            <Card.Body>\r\n              <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n                <h5 className=\"chart-title\">\r\n                  <FaClipboardList className=\"me-2\" />\r\n                  Booking Status Distribution\r\n                </h5>\r\n                <Badge bg=\"info\" className=\"chart-badge\">\r\n                  {Object.values(stats.bookingStatusStats || {}).reduce((a, b) => a + b, 0)} Total\r\n                </Badge>\r\n              </div>\r\n              <div className=\"chart-container\">\r\n                <Doughnut data={bookingStatusData} options={doughnutOptions} />\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n        <Col lg={6} md={12}>\r\n          <Card className=\"chart-card\">\r\n            <Card.Body>\r\n              <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n                <h5 className=\"chart-title\">\r\n                  <FaStar className=\"me-2\" />\r\n                  Rating Distribution\r\n                </h5>\r\n                <Badge bg=\"warning\" className=\"chart-badge\">\r\n                  {Object.values(stats.labourRatingStats || {}).reduce((a, b) => a + b, 0)} Ratings\r\n                </Badge>\r\n              </div>\r\n              <div className=\"chart-container\">\r\n                <Doughnut data={ratingData} options={doughnutOptions} />\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n        <Col lg={8} md={12}>\r\n          <Card className=\"chart-card\">\r\n            <Card.Body>\r\n              <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n                <h5 className=\"chart-title\">\r\n                  <FaUserTie className=\"me-2\" />\r\n                  Available Labourers by Skill\r\n                </h5>\r\n                <Badge bg=\"primary\" className=\"chart-badge\">\r\n                  {Object.values(stats.availableSkillStats || {}).reduce((a, b) => a + b, 0)} Available\r\n                </Badge>\r\n              </div>\r\n              <div className=\"chart-container\">\r\n                <Bar \r\n                  data={skillData} \r\n                  options={{\r\n                    ...chartOptions,\r\n                    indexAxis: 'y',\r\n                    plugins: {\r\n                      ...chartOptions.plugins,\r\n                      legend: {\r\n                        display: false\r\n                      }\r\n                    },\r\n                    scales: {\r\n                      x: {\r\n                        beginAtZero: true,\r\n                        ticks: {\r\n                          stepSize: 1,\r\n                          color: '#64748b'\r\n                        },\r\n                        grid: {\r\n                          color: '#e2e8f0'\r\n                        }\r\n                      },\r\n                      y: {\r\n                        ticks: {\r\n                          color: '#64748b'\r\n                        },\r\n                        grid: {\r\n                          color: '#e2e8f0'\r\n                        }\r\n                      }\r\n                    }\r\n                  }} \r\n                />\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n        <Col lg={4} md={12}>\r\n          <Card className=\"chart-card\">\r\n            <Card.Body>\r\n              <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n                <h5 className=\"chart-title\">\r\n                  <FaChartLine className=\"me-2\" />\r\n                  Revenue Trend\r\n                </h5>\r\n                <Badge bg=\"success\" className=\"chart-badge\">\r\n                  +{revenueGrowth}%\r\n                </Badge>\r\n              </div>\r\n              <div className=\"chart-container\">\r\n                <Line data={revenueData} options={lineOptions} />\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminStats; ","import React, { useState, useEffect, useRef } from 'react';\r\nimport { Container, Row, Col, Card, Table, Spinner, Alert, Badge, Button, Nav, Tab, ProgressBar } from 'react-bootstrap';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport DataTable from 'react-data-table-component';\r\nimport { adminService } from '../services/adminService';\r\nimport { \r\n  FaTimesCircle, \r\n  FaClock, \r\n  FaCheckCircle, \r\n  FaStar, \r\n  FaTools, \r\n  FaUpload, \r\n  FaUsers, \r\n  FaUserTie, \r\n  FaClipboardList,\r\n  FaChartLine,\r\n  FaDownload,\r\n  FaEye,\r\n  FaTrash,\r\n  FaEdit,\r\n  FaFilter,\r\n  FaSearch,\r\n  FaPlus,\r\n  FaExclamationTriangle,\r\n  FaCheck,\r\n  FaTimes,\r\n  FaUser,\r\n  FaPhone,\r\n  FaEnvelope,\r\n  FaMapMarkerAlt,\r\n  FaCalendarAlt,\r\n  FaMoneyBillWave,\r\n  FaShieldAlt\r\n} from 'react-icons/fa';\r\nimport BookingDetailsModal from './BookingDetailsModal';\r\nimport AdminStats from './AdminStats';\r\nimport '../styles/AdminDashboard.css';\r\n\r\nfunction AdminDashboard() {\r\n  const [labours, setLabours] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [bookings, setBookings] = useState([]);\r\n  const [isLoadingLabours, setIsLoadingLabours] = useState(true);\r\n  const [isLoadingUsers, setIsLoadingUsers] = useState(true);\r\n  const [isLoadingBookings, setIsLoadingBookings] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [selectedLabour, setSelectedLabour] = useState(null);\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [selectedBooking, setSelectedBooking] = useState(null);\r\n  const [labourModalOpen, setLabourModalOpen] = useState(false);\r\n  const [userModalOpen, setUserModalOpen] = useState(false);\r\n  const [bookingModalOpen, setBookingModalOpen] = useState(false);\r\n  const [showUserDetails, setShowUserDetails] = useState(false);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [uploadError, setUploadError] = useState(null);\r\n  const [uploadSuccess, setUploadSuccess] = useState(false);\r\n  const [activeTab, setActiveTab] = useState('overview');\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [filterStatus, setFilterStatus] = useState('all');\r\n  const fileInputRef = useRef(null);\r\n\r\n  // Pagination and Sorting State for Labours\r\n  const [labourPageNumber, setLabourPageNumber] = useState(0);\r\n  const [labourPageSize, setLabourPageSize] = useState(10);\r\n  const [labourSortBy, setLabourSortBy] = useState('rating');\r\n  const [labourSortOrder, setLabourSortOrder] = useState('asc');\r\n  const [totalLabourElements, setTotalLabourElements] = useState(0);\r\n  const [totalLabourPages, setTotalLabourPages] = useState(0);\r\n\r\n  // Pagination and Sorting State for Users\r\n  const [userPageNumber, setUserPageNumber] = useState(0);\r\n  const [userPageSize, setUserPageSize] = useState(5);\r\n  const [userSortBy, setUserSortBy] = useState('fullName');\r\n  const [userSortOrder, setUserSortOrder] = useState('asc');\r\n  const [totalUserElements, setTotalUserElements] = useState(0);\r\n  const [totalUserPages, setTotalUserPages] = useState(0);\r\n\r\n  // Pagination and Sorting State for Bookings\r\n  const [bookingPageNumber, setBookingPageNumber] = useState(0);\r\n  const [bookingPageSize, setBookingPageSize] = useState(20);\r\n  const [bookingSortBy, setBookingSortBy] = useState('bookingTime');\r\n  const [bookingSortOrder, setBookingSortOrder] = useState('asc');\r\n  const [totalBookingElements, setTotalBookingElements] = useState(0);\r\n  const [totalBookingPages, setTotalBookingPages] = useState(0);\r\n\r\n  // Enhanced Custom Styles for DataTable\r\n  const customStyles = {\r\n    table: {\r\n      style: {\r\n        backgroundColor: 'transparent',\r\n      },\r\n    },\r\n    headRow: {\r\n      style: {\r\n        backgroundColor: '#f8fafc',\r\n        borderBottom: '2px solid #e2e8f0',\r\n        borderRadius: '12px 12px 0 0',\r\n        minHeight: '60px',\r\n      },\r\n    },\r\n    headCells: {\r\n      style: {\r\n        paddingLeft: '24px',\r\n        paddingRight: '24px',\r\n        paddingTop: '16px',\r\n        paddingBottom: '16px',\r\n        fontSize: '0.875rem',\r\n        fontWeight: '700',\r\n        color: '#374151',\r\n        textTransform: 'uppercase',\r\n        letterSpacing: '0.05em',\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        minHeight: '72px',\r\n        fontSize: '0.875rem',\r\n        backgroundColor: 'white',\r\n        borderBottom: '1px solid #f3f4f6',\r\n        '&:hover': {\r\n          backgroundColor: '#f9fafb',\r\n          transform: 'translateY(-1px)',\r\n          boxShadow: '0 4px 12px rgba(0, 0, 0, 0.05)',\r\n          transition: 'all 0.2s ease',\r\n        },\r\n      },\r\n    },\r\n    cells: {\r\n      style: {\r\n        paddingLeft: '24px',\r\n        paddingRight: '24px',\r\n        paddingTop: '16px',\r\n        paddingBottom: '16px',\r\n        color: '#374151',\r\n        fontWeight: '500',\r\n      },\r\n    },\r\n    pagination: {\r\n      style: {\r\n        backgroundColor: '#f8fafc',\r\n        borderTop: '1px solid #e2e8f0',\r\n        borderRadius: '0 0 12px 12px',\r\n        padding: '16px 24px',\r\n      },\r\n    },\r\n  };\r\n\r\n  const [deletingLabourId, setDeletingLabourId] = useState(null);\r\n  const [deletingUserId, setDeletingUserId] = useState(null);\r\n  const [viewingLabourId, setViewingLabourId] = useState(null);\r\n  const [viewingUserId, setViewingUserId] = useState(null);\r\n  const [deletingBookingId, setDeletingBookingId] = useState(null);\r\n  const [viewingBookingId, setViewingBookingId] = useState(null);\r\n\r\n  const getStatusBadge = (statusCode) => {\r\n    switch (statusCode) {\r\n      case -1:\r\n        return <Badge bg=\"danger\" className=\"status-badge\"><FaTimesCircle className=\"me-1\" /> Rejected</Badge>;\r\n      case 1:\r\n        return <Badge bg=\"warning\" className=\"status-badge\"><FaClock className=\"me-1\" /> Pending</Badge>;\r\n      case 2:\r\n        return <Badge bg=\"primary\" className=\"status-badge\"><FaCheckCircle className=\"me-1\" /> Accepted</Badge>;\r\n      case 3:\r\n        return <Badge bg=\"success\" className=\"status-badge\"><FaCheck className=\"me-1\" /> Completed</Badge>;\r\n      default:\r\n        return <Badge bg=\"secondary\" className=\"status-badge\"><FaExclamationTriangle className=\"me-1\" /> Unknown</Badge>;\r\n    }\r\n  };\r\n\r\n  // Enhanced Columns Configuration for Labours\r\n  const labourColumns = [\r\n    {\r\n      name: 'Labour',\r\n      selector: row => row.labourName,\r\n      sortable: true,\r\n      sortField: 'labourName',\r\n      cell: row => (\r\n        <div className=\"d-flex align-items-center\">\r\n          <div className=\"labour-avatar me-3\">\r\n            <FaUser className=\"text-white\" size={16} />\r\n          </div>\r\n          <div>\r\n            <div className=\"fw-bold text-primary\">{row.labourName}</div>\r\n            <small className=\"text-muted\">{row.labourMobileNo}</small>\r\n          </div>\r\n        </div>\r\n      ),\r\n      width: '200px',\r\n    },\r\n    {\r\n      name: 'Skill',\r\n      selector: row => row.labourSkill,\r\n      sortable: true,\r\n      sortField: 'labourSkill',\r\n      cell: row => (\r\n        <Badge bg=\"info\" className=\"skill-badge\">\r\n          <FaTools className=\"me-1\" />\r\n          {row.labourSkill}\r\n        </Badge>\r\n      ),\r\n      width: '150px',\r\n    },\r\n    {\r\n      name: 'Rating',\r\n      selector: row => parseFloat(row.rating),\r\n      sortable: true,\r\n      sortField: 'rating',\r\n      cell: row => (\r\n        <div className=\"d-flex align-items-center\">\r\n          <FaStar className=\"text-warning me-1\" />\r\n          <span className=\"fw-bold\">{row.rating || '0'}</span>\r\n          <small className=\"text-muted ms-1\">({row.ratingCount || 0})</small>\r\n        </div>\r\n      ),\r\n      width: '120px',\r\n    },\r\n    {\r\n      name: 'Status',\r\n      selector: row => row.status,\r\n      sortable: true,\r\n      sortField: 'status',\r\n      cell: row => (\r\n        <Badge bg={row.status === 'active' ? 'success' : 'secondary'} className=\"status-badge\">\r\n          {row.status === 'active' ? 'Active' : 'Inactive'}\r\n        </Badge>\r\n      ),\r\n      width: '100px',\r\n    },\r\n    {\r\n      name: 'Actions',\r\n      cell: row => (\r\n        <div className=\"d-flex gap-2\">\r\n          <Button\r\n            variant=\"outline-info\"\r\n            size=\"sm\"\r\n            onClick={() => handleViewLabour(row.labourId)}\r\n            disabled={viewingLabourId === row.labourId}\r\n            className=\"action-btn\"\r\n          >\r\n            {viewingLabourId === row.labourId ? (\r\n              <Spinner as=\"span\" animation=\"border\" size=\"sm\" />\r\n            ) : (\r\n              <FaEye />\r\n            )}\r\n          </Button>\r\n          <Button\r\n            variant=\"outline-danger\"\r\n            size=\"sm\"\r\n            onClick={() => handleRemoveLabour(row.labourId)}\r\n            disabled={deletingLabourId === row.labourId}\r\n            className=\"action-btn\"\r\n          >\r\n            {deletingLabourId === row.labourId ? (\r\n              <Spinner as=\"span\" animation=\"border\" size=\"sm\" />\r\n            ) : (\r\n              <FaTrash />\r\n            )}\r\n          </Button>\r\n        </div>\r\n      ),\r\n      ignoreRowClick: true,\r\n      allowOverflow: true,\r\n      button: true,\r\n      width: '120px',\r\n    },\r\n  ];\r\n\r\n  // Enhanced Columns Configuration for Users\r\n  const userColumns = [\r\n    {\r\n      name: 'User',\r\n      selector: row => row.fullName,\r\n      sortable: true,\r\n      sortField: 'fullName',\r\n      cell: row => (\r\n        <div className=\"d-flex align-items-center\">\r\n          <div className=\"user-avatar me-3\">\r\n            <FaUser className=\"text-white\" size={16} />\r\n          </div>\r\n          <div>\r\n            <div className=\"fw-bold text-primary\">{row.fullName}</div>\r\n            <small className=\"text-muted\">{row.email}</small>\r\n          </div>\r\n        </div>\r\n      ),\r\n      width: '200px',\r\n    },\r\n    {\r\n      name: 'Contact',\r\n      selector: row => row.mobileNumber,\r\n      sortable: true,\r\n      sortField: 'mobileNo',\r\n      cell: row => (\r\n        <div className=\"d-flex align-items-center\">\r\n          <FaPhone className=\"text-muted me-2\" />\r\n          <span>{row.mobileNumber}</span>\r\n        </div>\r\n      ),\r\n      width: '150px',\r\n    },\r\n    {\r\n      name: 'Status',\r\n      selector: row => row.status,\r\n      sortable: true,\r\n      sortField: 'status',\r\n      cell: row => (\r\n        <Badge bg={row.status === 'active' ? 'success' : 'secondary'} className=\"status-badge\">\r\n          {row.status === 'active' ? 'Active' : 'Inactive'}\r\n        </Badge>\r\n      ),\r\n      width: '100px',\r\n    },\r\n    {\r\n      name: 'Actions',\r\n      cell: row => (\r\n        <div className=\"d-flex gap-2\">\r\n          <Button\r\n            variant=\"outline-info\"\r\n            size=\"sm\"\r\n            onClick={() => handleViewUser(row.userId, row.mobileNumber)}\r\n            disabled={viewingUserId === row.userId}\r\n            className=\"action-btn\"\r\n          >\r\n            {viewingUserId === row.userId ? (\r\n              <Spinner as=\"span\" animation=\"border\" size=\"sm\" />\r\n            ) : (\r\n              <FaEye />\r\n            )}\r\n          </Button>\r\n          <Button\r\n            variant=\"outline-danger\"\r\n            size=\"sm\"\r\n            onClick={() => handleRemoveUser(row.userId)}\r\n            disabled={deletingUserId === row.userId}\r\n            className=\"action-btn\"\r\n          >\r\n            {deletingUserId === row.userId ? (\r\n              <Spinner as=\"span\" animation=\"border\" size=\"sm\" />\r\n            ) : (\r\n              <FaTrash />\r\n            )}\r\n          </Button>\r\n        </div>\r\n      ),\r\n      ignoreRowClick: true,\r\n      allowOverflow: true,\r\n      button: true,\r\n      width: '120px',\r\n    },\r\n  ];\r\n\r\n  // Enhanced Columns Configuration for Bookings\r\n  const bookingColumns = [\r\n    {\r\n      name: 'Booking ID',\r\n      selector: row => row.bookingId,\r\n      sortable: true,\r\n      sortField: 'bookingId',\r\n      cell: row => (\r\n        <div className=\"fw-bold text-primary\">#{row.bookingId}</div>\r\n      ),\r\n      width: '120px',\r\n    },\r\n    {\r\n      name: 'Customer',\r\n      selector: row => row.userName,\r\n      sortable: true,\r\n      sortField: 'userName',\r\n      cell: row => (\r\n        <div className=\"d-flex align-items-center\">\r\n          <div className=\"user-avatar me-2\">\r\n            <FaUser className=\"text-white\" size={12} />\r\n          </div>\r\n          <span className=\"fw-medium\">{row.userName}</span>\r\n        </div>\r\n      ),\r\n      width: '150px',\r\n    },\r\n    {\r\n      name: 'Labour',\r\n      selector: row => row.labourName,\r\n      sortable: true,\r\n      sortField: 'labourName',\r\n      cell: row => (\r\n        <div className=\"d-flex align-items-center\">\r\n          <div className=\"labour-avatar me-2\">\r\n            <FaUserTie className=\"text-white\" size={12} />\r\n          </div>\r\n          <span className=\"fw-medium\">{row.labourName}</span>\r\n        </div>\r\n      ),\r\n      width: '150px',\r\n    },\r\n    {\r\n      name: 'Service',\r\n      selector: row => row.serviceName,\r\n      sortable: true,\r\n      sortField: 'serviceName',\r\n      cell: row => (\r\n        <Badge bg=\"info\" className=\"service-badge\">\r\n          <FaTools className=\"me-1\" />\r\n          {row.serviceName}\r\n        </Badge>\r\n      ),\r\n      width: '120px',\r\n    },\r\n    {\r\n      name: 'Status',\r\n      selector: row => row.bookingStatusCode,\r\n      sortable: true,\r\n      sortField: 'bookingStatusCode',\r\n      cell: row => getStatusBadge(row.bookingStatusCode),\r\n      width: '120px',\r\n    },\r\n    {\r\n      name: 'Date',\r\n      selector: row => row.bookingTime,\r\n      sortable: true,\r\n      sortField: 'bookingTime',\r\n      cell: row => (\r\n        <div className=\"d-flex align-items-center\">\r\n          <FaCalendarAlt className=\"text-muted me-2\" />\r\n          <small>{new Date(row.bookingTime).toLocaleDateString()}</small>\r\n        </div>\r\n      ),\r\n      width: '120px',\r\n    },\r\n    {\r\n      name: 'Actions',\r\n      cell: row => (\r\n        <div className=\"d-flex gap-2\">\r\n          <Button\r\n            variant=\"outline-info\"\r\n            size=\"sm\"\r\n            onClick={() => handleViewBooking(row)}\r\n            disabled={viewingBookingId === row.bookingId}\r\n            className=\"action-btn\"\r\n          >\r\n            {viewingBookingId === row.bookingId ? (\r\n              <Spinner as=\"span\" animation=\"border\" size=\"sm\" />\r\n            ) : (\r\n              <FaEye />\r\n            )}\r\n          </Button>\r\n          <Button\r\n            variant=\"outline-danger\"\r\n            size=\"sm\"\r\n            onClick={() => handleDeleteBooking(row.bookingId)}\r\n            disabled={deletingBookingId === row.bookingId}\r\n            className=\"action-btn\"\r\n          >\r\n            {deletingBookingId === row.bookingId ? (\r\n              <Spinner as=\"span\" animation=\"border\" size=\"sm\" />\r\n            ) : (\r\n              <FaTrash />\r\n            )}\r\n          </Button>\r\n        </div>\r\n      ),\r\n      ignoreRowClick: true,\r\n      allowOverflow: true,\r\n      button: true,\r\n      width: '120px',\r\n    },\r\n  ];\r\n\r\n  // Fetch data functions\r\n  const fetchLabours = async () => {\r\n    try {\r\n      setIsLoadingLabours(true);\r\n      const response = await adminService.getAllLabours(labourPageNumber, labourPageSize, labourSortBy, labourSortOrder);\r\n      if (response && !response.hasError) {\r\n        setLabours(response.content || []);\r\n        setTotalLabourElements(response.totalElements || 0);\r\n        setTotalLabourPages(response.totalPages || 0);\r\n      } else {\r\n        setError('Failed to fetch labours');\r\n      }\r\n    } catch (err) {\r\n      setError('Error fetching labours');\r\n      console.error('Error fetching labours:', err);\r\n    } finally {\r\n      setIsLoadingLabours(false);\r\n    }\r\n  };\r\n\r\n  const fetchUsers = async () => {\r\n    try {\r\n      setIsLoadingUsers(true);\r\n      const response = await adminService.getAllUsers(userPageNumber, userPageSize, userSortBy, userSortOrder);\r\n      if (response && !response.hasError) {\r\n        setUsers(response.content || []);\r\n        setTotalUserElements(response.totalElements || 0);\r\n        setTotalUserPages(response.totalPages || 0);\r\n      } else {\r\n        setError('Failed to fetch users');\r\n      }\r\n    } catch (err) {\r\n      setError('Error fetching users');\r\n      console.error('Error fetching users:', err);\r\n    } finally {\r\n      setIsLoadingUsers(false);\r\n    }\r\n  };\r\n\r\n  const fetchBookings = async () => {\r\n    try {\r\n      setIsLoadingBookings(true);\r\n      const response = await adminService.getAllBookings(bookingPageNumber, bookingPageSize, bookingSortBy, bookingSortOrder);\r\n      if (response && !response.hasError) {\r\n        setBookings(response.content || []);\r\n        setTotalBookingElements(response.totalElements || 0);\r\n        setTotalBookingPages(response.totalPages || 0);\r\n      } else {\r\n        setError('Failed to fetch bookings');\r\n      }\r\n    } catch (err) {\r\n      setError('Error fetching bookings');\r\n      console.error('Error fetching bookings:', err);\r\n    } finally {\r\n      setIsLoadingBookings(false);\r\n    }\r\n  };\r\n\r\n  // Event handlers\r\n  const handleRemoveLabour = async (labourId) => {\r\n    if (!window.confirm('Are you sure you want to remove this labour?')) return;\r\n    \r\n    try {\r\n      setDeletingLabourId(labourId);\r\n      const response = await adminService.removeLabour(labourId);\r\n      if (response && !response.hasError) {\r\n        fetchLabours();\r\n      } else {\r\n        setError('Failed to remove labour');\r\n      }\r\n    } catch (err) {\r\n      setError('Error removing labour');\r\n      console.error('Error removing labour:', err);\r\n    } finally {\r\n      setDeletingLabourId(null);\r\n    }\r\n  };\r\n\r\n  const handleRemoveUser = async (userId) => {\r\n    if (!window.confirm('Are you sure you want to remove this user?')) return;\r\n    \r\n    try {\r\n      setDeletingUserId(userId);\r\n      const response = await adminService.removeUser(userId);\r\n      if (response && !response.hasError) {\r\n        fetchUsers();\r\n      } else {\r\n        setError('Failed to remove user');\r\n      }\r\n    } catch (err) {\r\n      setError('Error removing user');\r\n      console.error('Error removing user:', err);\r\n    } finally {\r\n      setDeletingUserId(null);\r\n    }\r\n  };\r\n\r\n  const handleViewLabour = async (labourId) => {\r\n    try {\r\n      setViewingLabourId(labourId);\r\n      const response = await adminService.getLabourById(labourId);\r\n      if (response && !response.hasError) {\r\n        setSelectedLabour(response.returnValue);\r\n        setLabourModalOpen(true);\r\n      } else {\r\n        setError('Failed to fetch labour details');\r\n      }\r\n    } catch (err) {\r\n      setError('Error fetching labour details');\r\n      console.error('Error fetching labour details:', err);\r\n    } finally {\r\n      setViewingLabourId(null);\r\n    }\r\n  };\r\n\r\n  const handleViewUser = (userId, mobileNumber) => {\r\n    setSelectedUser({ userId, mobileNumber });\r\n    setUserModalOpen(true);\r\n  };\r\n\r\n  const handleViewBooking = (booking) => {\r\n    setSelectedBooking(booking);\r\n    setBookingModalOpen(true);\r\n  };\r\n\r\n  const handleDeleteBooking = async (bookingId) => {\r\n    if (!window.confirm('Are you sure you want to delete this booking?')) return;\r\n    \r\n    try {\r\n      setDeletingBookingId(bookingId);\r\n      const response = await adminService.removeBooking(bookingId);\r\n      if (response && !response.hasError) {\r\n        fetchBookings();\r\n      } else {\r\n        setError('Failed to delete booking');\r\n      }\r\n    } catch (err) {\r\n      setError('Error deleting booking');\r\n      console.error('Error deleting booking:', err);\r\n    } finally {\r\n      setDeletingBookingId(null);\r\n    }\r\n  };\r\n\r\n  const toggleLabourModal = () => {\r\n    setLabourModalOpen(!labourModalOpen);\r\n    if (!labourModalOpen) {\r\n      setSelectedLabour(null);\r\n    }\r\n  };\r\n\r\n  const toggleUserModal = () => {\r\n    setUserModalOpen(!userModalOpen);\r\n    if (!userModalOpen) {\r\n      setSelectedUser(null);\r\n    }\r\n  };\r\n\r\n  const toggleBookingModal = () => {\r\n    setBookingModalOpen(!bookingModalOpen);\r\n    if (!bookingModalOpen) {\r\n      setSelectedBooking(null);\r\n    }\r\n  };\r\n\r\n  const handleFileUpload = async (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n\r\n    if (!file.name.match(/\\.(xlsx|xls)$/)) {\r\n      setUploadError('Please upload an Excel file (.xlsx or .xls)');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setIsUploading(true);\r\n      setUploadError(null);\r\n      setUploadSuccess(false);\r\n\r\n      const response = await adminService.uploadLabours(file);\r\n      \r\n      if (response && !response.hasError) {\r\n        setUploadSuccess(true);\r\n        const updatedResponse = await adminService.getAllLabours(labourPageNumber, labourPageSize, labourSortBy, labourSortOrder);\r\n        if (updatedResponse) {\r\n          setLabours(updatedResponse.content || []);\r\n          setTotalLabourElements(updatedResponse.totalElements || 0);\r\n          setTotalLabourPages(updatedResponse.totalPages || 0);\r\n        }\r\n      } else {\r\n        setUploadError(response?.message || 'Failed to upload labours');\r\n      }\r\n    } catch (error) {\r\n      setUploadError(error.response?.data?.message || 'Error uploading file');\r\n    } finally {\r\n      setIsUploading(false);\r\n      if (fileInputRef.current) {\r\n        fileInputRef.current.value = '';\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (uploadSuccess) {\r\n      const timer = setTimeout(() => setUploadSuccess(false), 3000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [uploadSuccess]);\r\n\r\n  useEffect(() => {\r\n    if (uploadError) {\r\n      const timer = setTimeout(() => setUploadError(null), 5000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [uploadError]);\r\n\r\n  useEffect(() => {\r\n    fetchLabours();\r\n  }, [labourPageNumber, labourPageSize, labourSortBy, labourSortOrder]);\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, [userPageNumber, userPageSize, userSortBy, userSortOrder]);\r\n\r\n  useEffect(() => {\r\n    fetchBookings();\r\n  }, [bookingPageNumber, bookingPageSize, bookingSortBy, bookingSortOrder]);\r\n\r\n  return (\r\n    <Container fluid className=\"admin-dashboard\">\r\n      {/* Header Section */}\r\n      <div className=\"admin-header mb-4\">\r\n        <div className=\"d-flex justify-content-between align-items-center\">\r\n          <div>\r\n            <h1 className=\"admin-title mb-2\">\r\n              <FaShieldAlt className=\"me-3 text-primary\" />\r\n              Admin Dashboard\r\n            </h1>\r\n            <p className=\"text-muted mb-0\">Manage your labour services platform</p>\r\n          </div>\r\n          <div className=\"admin-actions\">\r\n            <Button variant=\"outline-primary\" className=\"me-2\">\r\n              <FaDownload className=\"me-2\" />\r\n              Export Data\r\n            </Button>\r\n            <Button variant=\"primary\">\r\n              <FaPlus className=\"me-2\" />\r\n              Add New\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Analytics Overview */}\r\n      <AdminStats />\r\n\r\n      {/* Main Content Tabs */}\r\n      <Card className=\"admin-content-card\">\r\n        <Card.Header className=\"admin-card-header\">\r\n          <Nav variant=\"tabs\" activeKey={activeTab} onSelect={(k) => setActiveTab(k)}>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"overview\" className=\"admin-tab\">\r\n                <FaChartLine className=\"me-2\" />\r\n                Overview\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"labours\" className=\"admin-tab\">\r\n                <FaUserTie className=\"me-2\" />\r\n                Labour Management\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"users\" className=\"admin-tab\">\r\n                <FaUsers className=\"me-2\" />\r\n                User Management\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"bookings\" className=\"admin-tab\">\r\n                <FaClipboardList className=\"me-2\" />\r\n                Booking Management\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n          </Nav>\r\n        </Card.Header>\r\n        <Card.Body className=\"admin-card-body\">\r\n          <Tab.Content>\r\n            <Tab.Pane eventKey=\"overview\" active={activeTab === 'overview'}>\r\n              <div className=\"overview-section\">\r\n                <Row className=\"g-4\">\r\n                  <Col md={6}>\r\n                    <Card className=\"h-100 overview-card\">\r\n                      <Card.Body>\r\n                        <h5 className=\"card-title\">\r\n                          <FaUserTie className=\"me-2 text-primary\" />\r\n                          Recent Labours\r\n                        </h5>\r\n                        <div className=\"recent-list\">\r\n                          {labours.slice(0, 5).map((labour, index) => (\r\n                            <div key={labour.labourId} className=\"recent-item\">\r\n                              <div className=\"d-flex align-items-center\">\r\n                                <div className=\"labour-avatar me-3\">\r\n                                  <FaUser className=\"text-white\" size={14} />\r\n                                </div>\r\n                                <div className=\"flex-grow-1\">\r\n                                  <div className=\"fw-bold\">{labour.labourName}</div>\r\n                                  <small className=\"text-muted\">{labour.labourSkill}</small>\r\n                                </div>\r\n                                <Badge bg=\"success\" className=\"status-badge\">\r\n                                  Active\r\n                                </Badge>\r\n                              </div>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <Card className=\"h-100 overview-card\">\r\n                      <Card.Body>\r\n                        <h5 className=\"card-title\">\r\n                          <FaClipboardList className=\"me-2 text-primary\" />\r\n                          Recent Bookings\r\n                        </h5>\r\n                        <div className=\"recent-list\">\r\n                          {bookings.slice(0, 5).map((booking, index) => (\r\n                            <div key={booking.bookingId} className=\"recent-item\">\r\n                              <div className=\"d-flex align-items-center\">\r\n                                <div className=\"booking-avatar me-3\">\r\n                                  <FaCalendarAlt className=\"text-white\" size={14} />\r\n                                </div>\r\n                                <div className=\"flex-grow-1\">\r\n                                  <div className=\"fw-bold\">#{booking.bookingId}</div>\r\n                                  <small className=\"text-muted\">{booking.userName}</small>\r\n                                </div>\r\n                                {getStatusBadge(booking.bookingStatusCode)}\r\n                              </div>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            </Tab.Pane>\r\n\r\n            <Tab.Pane eventKey=\"labours\" active={activeTab === 'labours'}>\r\n              <div className=\"labour-management-section\">\r\n                <div className=\"section-header mb-4\">\r\n                  <div className=\"d-flex justify-content-between align-items-center\">\r\n                    <div>\r\n                      <h4 className=\"section-title\">\r\n                        <FaUserTie className=\"me-2\" />\r\n                        Labour Management\r\n                      </h4>\r\n                      <p className=\"text-muted mb-0\">Manage service providers and their details</p>\r\n                    </div>\r\n                    <div className=\"d-flex gap-2\">\r\n                      <input\r\n                        type=\"file\"\r\n                        ref={fileInputRef}\r\n                        onChange={handleFileUpload}\r\n                        accept=\".xlsx,.xls\"\r\n                        style={{ display: 'none' }}\r\n                      />\r\n                      <Button\r\n                        variant=\"success\"\r\n                        onClick={() => fileInputRef.current?.click()}\r\n                        disabled={isUploading}\r\n                        className=\"upload-btn\"\r\n                      >\r\n                        {isUploading ? (\r\n                          <>\r\n                            <Spinner as=\"span\" animation=\"border\" size=\"sm\" className=\"me-2\" />\r\n                            Uploading...\r\n                          </>\r\n                        ) : (\r\n                          <>\r\n                            <FaUpload className=\"me-2\" />\r\n                            Bulk Upload\r\n                          </>\r\n                        )}\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {uploadError && (\r\n                  <Alert variant=\"danger\" onClose={() => setUploadError(null)} dismissible className=\"mb-3\">\r\n                    <FaExclamationTriangle className=\"me-2\" />\r\n                    {uploadError}\r\n                  </Alert>\r\n                )}\r\n                {uploadSuccess && (\r\n                  <Alert variant=\"success\" onClose={() => setUploadSuccess(false)} dismissible className=\"mb-3\">\r\n                    <FaCheck className=\"me-2\" />\r\n                    Labours uploaded successfully!\r\n                  </Alert>\r\n                )}\r\n\r\n                <div className=\"data-table-container\">\r\n                  <DataTable\r\n                    columns={labourColumns}\r\n                    data={Array.isArray(labours) ? labours : []}\r\n                    pagination\r\n                    paginationServer\r\n                    paginationTotalRows={totalLabourElements}\r\n                    paginationDefaultPage={labourPageNumber + 1}\r\n                    onChangePage={page => setLabourPageNumber(page - 1)}\r\n                    onChangeRowsPerPage={(currentRowsPerPage, currentPage) => {\r\n                      setLabourPageSize(currentRowsPerPage);\r\n                      setLabourPageNumber(currentPage - 1);\r\n                    }}\r\n                    sortServer\r\n                    onSort={(column, sortDirection) => {\r\n                      setLabourSortBy(column.sortField || 'rating');\r\n                      setLabourSortOrder(sortDirection || 'asc');\r\n                    }}\r\n                    progressPending={isLoadingLabours}\r\n                    noDataComponent={\r\n                      <div className=\"text-center py-4\">\r\n                        <FaUserTie className=\"text-muted mb-3\" size={48} />\r\n                        <p className=\"text-muted mb-0\">No labours found</p>\r\n                      </div>\r\n                    }\r\n                    customStyles={customStyles}\r\n                    responsive\r\n                    highlightOnHover\r\n                    pointerOnHover\r\n                  />\r\n                </div>\r\n              </div>\r\n            </Tab.Pane>\r\n\r\n            <Tab.Pane eventKey=\"users\" active={activeTab === 'users'}>\r\n              <div className=\"user-management-section\">\r\n                <div className=\"section-header mb-4\">\r\n                  <div className=\"d-flex justify-content-between align-items-center\">\r\n                    <div>\r\n                      <h4 className=\"section-title\">\r\n                        <FaUsers className=\"me-2\" />\r\n                        User Management\r\n                      </h4>\r\n                      <p className=\"text-muted mb-0\">Manage customer accounts and information</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"data-table-container\">\r\n                  <DataTable\r\n                    columns={userColumns}\r\n                    data={Array.isArray(users) ? users : []}\r\n                    pagination\r\n                    paginationServer\r\n                    paginationTotalRows={totalUserElements}\r\n                    paginationDefaultPage={userPageNumber + 1}\r\n                    onChangePage={page => setUserPageNumber(page - 1)}\r\n                    onChangeRowsPerPage={(currentRowsPerPage, currentPage) => {\r\n                      setUserPageSize(currentRowsPerPage);\r\n                      setUserPageNumber(currentPage - 1);\r\n                    }}\r\n                    sortServer\r\n                    onSort={(column, sortDirection) => {\r\n                      setUserSortBy(column.sortField || 'fullName');\r\n                      setUserSortOrder(sortDirection || 'asc');\r\n                    }}\r\n                    progressPending={isLoadingUsers}\r\n                    noDataComponent={\r\n                      <div className=\"text-center py-4\">\r\n                        <FaUsers className=\"text-muted mb-3\" size={48} />\r\n                        <p className=\"text-muted mb-0\">No users found</p>\r\n                      </div>\r\n                    }\r\n                    customStyles={customStyles}\r\n                    responsive\r\n                    highlightOnHover\r\n                    pointerOnHover\r\n                  />\r\n                </div>\r\n              </div>\r\n            </Tab.Pane>\r\n\r\n            <Tab.Pane eventKey=\"bookings\" active={activeTab === 'bookings'}>\r\n              <div className=\"booking-management-section\">\r\n                <div className=\"section-header mb-4\">\r\n                  <div className=\"d-flex justify-content-between align-items-center\">\r\n                    <div>\r\n                      <h4 className=\"section-title\">\r\n                        <FaClipboardList className=\"me-2\" />\r\n                        Booking Management\r\n                      </h4>\r\n                      <p className=\"text-muted mb-0\">Monitor and manage service bookings</p>\r\n                    </div>\r\n                    <div className=\"d-flex gap-2\">\r\n                      <div className=\"search-box\">\r\n                        <FaSearch className=\"search-icon\" />\r\n                        <input\r\n                          type=\"text\"\r\n                          placeholder=\"Search bookings...\"\r\n                          className=\"search-input\"\r\n                          value={searchTerm}\r\n                          onChange={(e) => setSearchTerm(e.target.value)}\r\n                        />\r\n                      </div>\r\n                      <select\r\n                        className=\"form-select filter-select\"\r\n                        value={filterStatus}\r\n                        onChange={(e) => setFilterStatus(e.target.value)}\r\n                      >\r\n                        <option value=\"all\">All Status</option>\r\n                        <option value=\"pending\">Pending</option>\r\n                        <option value=\"accepted\">Accepted</option>\r\n                        <option value=\"completed\">Completed</option>\r\n                        <option value=\"rejected\">Rejected</option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"data-table-container\">\r\n                  <DataTable\r\n                    columns={bookingColumns}\r\n                    data={Array.isArray(bookings) ? bookings : []}\r\n                    pagination\r\n                    paginationServer\r\n                    paginationTotalRows={totalBookingElements}\r\n                    paginationDefaultPage={bookingPageNumber + 1}\r\n                    onChangePage={page => setBookingPageNumber(page - 1)}\r\n                    onChangeRowsPerPage={(currentRowsPerPage, currentPage) => {\r\n                      setBookingPageSize(currentRowsPerPage);\r\n                      setBookingPageNumber(currentPage - 1);\r\n                    }}\r\n                    sortServer\r\n                    onSort={(column, sortDirection) => {\r\n                      setBookingSortBy(column.sortField || 'bookingTime');\r\n                      setBookingSortOrder(sortDirection || 'asc');\r\n                    }}\r\n                    progressPending={isLoadingBookings}\r\n                    noDataComponent={\r\n                      <div className=\"text-center py-4\">\r\n                        <FaClipboardList className=\"text-muted mb-3\" size={48} />\r\n                        <p className=\"text-muted mb-0\">No bookings found</p>\r\n                      </div>\r\n                    }\r\n                    customStyles={customStyles}\r\n                    responsive\r\n                    highlightOnHover\r\n                    pointerOnHover\r\n                  />\r\n                </div>\r\n              </div>\r\n            </Tab.Pane>\r\n          </Tab.Content>\r\n        </Card.Body>\r\n      </Card>\r\n\r\n      {/* Enhanced Modals */}\r\n      <Modal isOpen={labourModalOpen} toggle={toggleLabourModal} size=\"lg\" className=\"admin-modal\">\r\n        <ModalHeader toggle={toggleLabourModal} className=\"admin-modal-header\">\r\n          <div className=\"d-flex align-items-center\">\r\n            <FaUserTie className=\"me-2 text-primary\" />\r\n            Labour Details\r\n          </div>\r\n        </ModalHeader>\r\n        <ModalBody className=\"admin-modal-body\">\r\n          {selectedLabour && (\r\n            <div className=\"labour-details\">\r\n              <div className=\"detail-header mb-4\">\r\n                <div className=\"d-flex align-items-center\">\r\n                  <div className=\"labour-avatar-large me-3\">\r\n                    <FaUser className=\"text-white\" size={24} />\r\n                  </div>\r\n                  <div>\r\n                    <h4 className=\"mb-1\">{selectedLabour.labourName}</h4>\r\n                    <Badge bg=\"info\" className=\"skill-badge-large\">\r\n                      <FaTools className=\"me-1\" />\r\n                      {selectedLabour.labourSkill}\r\n                    </Badge>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              <Row className=\"g-3\">\r\n                <Col md={6}>\r\n                  <div className=\"detail-item\">\r\n                    <label className=\"detail-label\">\r\n                      <FaPhone className=\"me-2\" />\r\n                      Mobile Number\r\n                    </label>\r\n                    <div className=\"detail-value\">{selectedLabour.labourMobileNo}</div>\r\n                  </div>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <div className=\"detail-item\">\r\n                    <label className=\"detail-label\">\r\n                      <FaStar className=\"me-2\" />\r\n                      Rating\r\n                    </label>\r\n                    <div className=\"detail-value\">\r\n                      {selectedLabour.rating && Number(selectedLabour.rating) > 0 \r\n                        ? `${selectedLabour.rating} (${selectedLabour.ratingCount || 0} reviews)`\r\n                        : 'No ratings yet'\r\n                      }\r\n                    </div>\r\n                  </div>\r\n                </Col>\r\n                {Array.isArray(selectedLabour?.labourSubSkills) && selectedLabour.labourSubSkills.length > 0 && (\r\n                  <Col md={12}>\r\n                    <div className=\"detail-item\">\r\n                      <label className=\"detail-label\">\r\n                        <FaTools className=\"me-2\" />\r\n                        Sub Skills\r\n                      </label>\r\n                      <div className=\"detail-value\">\r\n                        <div className=\"d-flex flex-wrap gap-2\">\r\n                          {selectedLabour.labourSubSkills.map((sub, idx) => (\r\n                            <Badge key={sub.subSkillId || idx} bg=\"secondary\" className=\"sub-skill-badge\">\r\n                              {sub.subSkillName}\r\n                            </Badge>\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                )}\r\n              </Row>\r\n            </div>\r\n          )}\r\n        </ModalBody>\r\n        <ModalFooter className=\"admin-modal-footer\">\r\n          <Button color=\"secondary\" onClick={toggleLabourModal}>Close</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n\r\n      <Modal isOpen={userModalOpen} toggle={toggleUserModal} size=\"lg\" className=\"admin-modal\">\r\n        <ModalHeader toggle={toggleUserModal} className=\"admin-modal-header\">\r\n          <div className=\"d-flex align-items-center\">\r\n            <FaUser className=\"me-2 text-primary\" />\r\n            User Details\r\n          </div>\r\n        </ModalHeader>\r\n        <ModalBody className=\"admin-modal-body\">\r\n          {selectedUser && (\r\n            <div className=\"user-details\">\r\n              <div className=\"detail-header mb-4\">\r\n                <div className=\"d-flex align-items-center\">\r\n                  <div className=\"user-avatar-large me-3\">\r\n                    <FaUser className=\"text-white\" size={24} />\r\n                  </div>\r\n                  <div>\r\n                    <h4 className=\"mb-1\">User #{selectedUser.userId}</h4>\r\n                    <Badge bg=\"success\" className=\"status-badge-large\">Active</Badge>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              <Row className=\"g-3\">\r\n                <Col md={6}>\r\n                  <div className=\"detail-item\">\r\n                    <label className=\"detail-label\">\r\n                      <FaPhone className=\"me-2\" />\r\n                      Mobile Number\r\n                    </label>\r\n                    <div className=\"detail-value\">{selectedUser.mobileNumber}</div>\r\n                  </div>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <div className=\"detail-item\">\r\n                    <label className=\"detail-label\">\r\n                      <FaEnvelope className=\"me-2\" />\r\n                      Email\r\n                    </label>\r\n                    <div className=\"detail-value\">{selectedUser.email || 'Not provided'}</div>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          )}\r\n        </ModalBody>\r\n        <ModalFooter className=\"admin-modal-footer\">\r\n          <Button color=\"secondary\" onClick={toggleUserModal}>Close</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n\r\n      <BookingDetailsModal\r\n        isOpen={bookingModalOpen}\r\n        toggle={toggleBookingModal}\r\n        booking={selectedBooking}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default AdminDashboard; "],"names":["baseurl","concat","process","adminService","getAllLabours","async","pageNumber","pageSize","sortBy","sortOrder","endpoint","axios","post","headers","data","getLabourById","labourId","get","getAllUsers","removeLabour","delete","removeUser","userId","getAllBookings","deleteBooking","bookingId","getAppStats","uploadLabours","formData","FormData","append","file","_ref","isOpen","toggle","booking","_jsxs","Modal","show","onHide","size","centered","children","_jsx","Header","closeButton","Title","Body","className","Card","userName","userMobileNumber","labourName","labourMobileNo","labourSkill","bookingTime","Date","toLocaleString","statusCode","Badge","bg","FaTimesCircle","FaClock","FaCheckCircle","getStatusBadge","bookingStatusCode","Footer","Button","variant","onClick","ChartJS","register","CategoryScale","LinearScale","BarElement","Tooltip","Legend","ArcElement","PointElement","LineElement","Filler","AdminStats","_stats$bookingStatusS","_stats$bookingStatusS2","_stats$bookingStatusS3","_stats$bookingStatusS4","_stats$labourRatingSt","_stats$labourRatingSt2","_stats$labourRatingSt3","_stats$labourRatingSt4","_stats$labourRatingSt5","stats","setStats","useState","loading","setLoading","error","setError","useEffect","fetchStats","response","hasError","returnValue","err","console","Spinner","animation","role","Alert","totalUsers","totalLabours","totalBookings","totalRevenue","bookingStatusData","labels","datasets","bookingStatusStats","completed","pending","accepted","rejected","backgroundColor","borderWidth","borderColor","hoverBorderWidth","ratingData","labourRatingStats","rating_5","rating_4","rating_3","rating_2","rating_1","skillData","Object","keys","availableSkillStats","label","values","borderRadius","borderSkipped","chartOptions","responsive","maintainAspectRatio","plugins","legend","display","tooltip","titleColor","bodyColor","cornerRadius","displayColors","scales","y","beginAtZero","ticks","stepSize","color","grid","x","doughnutOptions","position","padding","usePointStyle","font","Row","Col","lg","md","FaArrowUp","FaUsers","FaUserTie","FaClipboardList","FaChartLine","reduce","a","b","Doughnut","options","FaStar","Bar","_objectSpread","indexAxis","Line","fill","tension","callback","value","labours","setLabours","users","setUsers","bookings","setBookings","isLoadingLabours","setIsLoadingLabours","isLoadingUsers","setIsLoadingUsers","isLoadingBookings","setIsLoadingBookings","selectedLabour","setSelectedLabour","selectedUser","setSelectedUser","selectedBooking","setSelectedBooking","labourModalOpen","setLabourModalOpen","userModalOpen","setUserModalOpen","bookingModalOpen","setBookingModalOpen","showUserDetails","setShowUserDetails","isUploading","setIsUploading","uploadError","setUploadError","uploadSuccess","setUploadSuccess","activeTab","setActiveTab","searchTerm","setSearchTerm","filterStatus","setFilterStatus","fileInputRef","useRef","labourPageNumber","setLabourPageNumber","labourPageSize","setLabourPageSize","labourSortBy","setLabourSortBy","labourSortOrder","setLabourSortOrder","totalLabourElements","setTotalLabourElements","totalLabourPages","setTotalLabourPages","userPageNumber","setUserPageNumber","userPageSize","setUserPageSize","userSortBy","setUserSortBy","userSortOrder","setUserSortOrder","totalUserElements","setTotalUserElements","totalUserPages","setTotalUserPages","bookingPageNumber","setBookingPageNumber","bookingPageSize","setBookingPageSize","bookingSortBy","setBookingSortBy","bookingSortOrder","setBookingSortOrder","totalBookingElements","setTotalBookingElements","totalBookingPages","setTotalBookingPages","customStyles","table","style","headRow","borderBottom","minHeight","headCells","paddingLeft","paddingRight","paddingTop","paddingBottom","fontSize","fontWeight","textTransform","letterSpacing","rows","transform","boxShadow","transition","cells","pagination","borderTop","deletingLabourId","setDeletingLabourId","deletingUserId","setDeletingUserId","viewingLabourId","setViewingLabourId","viewingUserId","setViewingUserId","deletingBookingId","setDeletingBookingId","viewingBookingId","setViewingBookingId","FaCheck","FaExclamationTriangle","labourColumns","name","selector","row","sortable","sortField","cell","FaUser","width","FaTools","parseFloat","rating","ratingCount","status","handleViewLabour","disabled","as","FaEye","handleRemoveLabour","FaTrash","ignoreRowClick","allowOverflow","button","userColumns","fullName","email","mobileNumber","FaPhone","handleViewUser","handleRemoveUser","bookingColumns","serviceName","FaCalendarAlt","toLocaleDateString","handleViewBooking","handleDeleteBooking","fetchLabours","content","totalElements","totalPages","fetchUsers","fetchBookings","window","confirm","removeBooking","toggleLabourModal","toggleUserModal","timer","setTimeout","clearTimeout","Container","fluid","FaShieldAlt","FaDownload","FaPlus","Nav","activeKey","onSelect","k","Item","Link","eventKey","Tab","Content","Pane","active","slice","map","labour","index","type","ref","onChange","event","target","files","match","updatedResponse","message","_error$response","_error$response$data","current","accept","_fileInputRef$current","click","_Fragment","FaUpload","onClose","dismissible","DataTable","columns","Array","isArray","paginationServer","paginationTotalRows","paginationDefaultPage","onChangePage","page","onChangeRowsPerPage","currentRowsPerPage","currentPage","sortServer","onSort","column","sortDirection","progressPending","noDataComponent","highlightOnHover","pointerOnHover","FaSearch","placeholder","e","ModalHeader","ModalBody","Number","labourSubSkills","length","sub","idx","subSkillName","subSkillId","ModalFooter","FaEnvelope","BookingDetailsModal","toggleBookingModal"],"sourceRoot":""}