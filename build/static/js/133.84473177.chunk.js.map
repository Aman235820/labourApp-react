{"version":3,"file":"static/js/133.84473177.chunk.js","mappings":"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","sources":["services/LabourSearchService.js","components/LabourListPage.js","components/LabourDetailsModal.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst appUrl = process.env.REACT_APP_API_BASEURL;\r\nconst baseurl = `${appUrl}/labourapp/labourReq`;\r\n\r\nexport const searchLabourByCategory = async (category, pageNumber = 0, pageSize = 10, sortBy = \"rating\", sortOrder = \"desc\") => {\r\n    try {\r\n        // Properly encode the category parameter to handle special characters\r\n        const encodedCategory = encodeURIComponent(category);\r\n        const endpoint = `${baseurl}/findByCategory?category=${encodedCategory}`;\r\n        console.log(endpoint);\r\n        console.log('Pagination params:', { pageNumber, pageSize, sortBy, sortOrder });\r\n\r\n        const response = await axios.post(endpoint, {\r\n            pageNumber,\r\n            pageSize,\r\n            sortBy,\r\n            sortOrder\r\n        }, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        throw new Error(error.response?.data?.message || 'Failed to fetch labor search results');\r\n    }\r\n}; ","import React, { useState, useEffect, useRef } from 'react';\nimport { Container, Row, Col, Button, Spinner } from 'react-bootstrap';\nimport { FaArrowLeft, FaUser, FaTools, FaPhone, FaStar } from 'react-icons/fa';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport DataTable from 'react-data-table-component';\nimport { searchLabourByCategory } from '../services/LabourSearchService';\nimport LabourDetailsModal from './LabourDetailsModal';\nimport '../styles/LabourListPage.css';\n\nfunction LabourListPage() {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const isMounted = useRef(true);\n  \n  // Get data from navigation state\n  const {\n    labourers: initialLabourers = [],\n    totalElements: initialTotalElements = 0,\n    totalPages: initialTotalPages = 0,\n    service = '',\n    currentPage: initialCurrentPage = 0,\n    pageSize: initialPageSize = 10,\n    error: initialError = null\n  } = location.state || {};\n  \n  const [labourers, setLabourers] = useState(initialLabourers);\n  const [isLoading, setIsLoading] = useState(false); // Start with false since data is already loaded\n  const [error, setError] = useState(initialError);\n  const [currentPage, setCurrentPage] = useState(initialCurrentPage);\n  const [totalPages, setTotalPages] = useState(initialTotalPages);\n  const [pageSize, setPageSize] = useState(initialPageSize);\n  const [totalElements, setTotalElements] = useState(initialTotalElements);\n  const [selectedLabour, setSelectedLabour] = useState(null);\n  const [showLabourModal, setShowLabourModal] = useState(false);\n\n  const columns = [\n    {\n      name: 'Name',\n      selector: row => row.labourName,\n      sortable: true,\n      cell: row => (\n        <div className=\"d-flex align-items-center\">\n          <FaUser className=\"text-primary me-2\" style={{ fontSize: '1.2rem' }} />\n          <span className=\"fw-medium text-primary\">\n            {row.labourName}\n          </span>\n        </div>\n      ),\n    },\n    {\n      name: 'Services',\n      selector: row => row.labourSkill,\n      sortable: true,\n      cell: row => (\n        <div className=\"d-flex align-items-center\">\n          <FaTools className=\"text-success me-2\" style={{ fontSize: '1.2rem' }} />\n          <span className=\"fw-medium\">{row.labourSkill}</span>\n        </div>\n      ),\n    },\n    {\n      name: 'Phone',\n      selector: row => row.labourMobileNo,\n      cell: row => (\n        <div className=\"d-flex align-items-center\">\n          <Button\n            variant=\"outline-primary\"\n            size=\"sm\"\n            onClick={() => window.location.href = `tel:${row.labourMobileNo}`}\n            className=\"d-flex align-items-center\"\n          >\n            <FaPhone className=\"me-2\" />\n            Call Now\n          </Button>\n        </div>\n      ),\n    },\n    {\n      name: 'Rating',\n      selector: row => row.rating,\n      sortable: true,\n      cell: row => (\n        <div className=\"d-flex align-items-center\">\n          <FaStar className=\"text-warning me-2\" style={{ fontSize: '1.2rem' }} />\n          <span className=\"fw-medium\">{row.rating || 'No ratings yet'}</span>\n        </div>\n      ),\n    },\n  ];\n\n  const customStyles = {\n    headRow: {\n      style: {\n        backgroundColor: '#f8f9fa',\n        borderBottom: '2px solid #dee2e6',\n        fontSize: '1.1rem',\n        fontWeight: 'bold',\n        padding: '1rem',\n      },\n    },\n    headCells: {\n      style: {\n        paddingLeft: '1.5rem',\n        paddingRight: '1.5rem',\n        fontSize: '1.1rem',\n        fontWeight: 'bold',\n        color: '#2c3e50',\n      },\n    },\n    cells: {\n      style: {\n        paddingLeft: '1.5rem',\n        paddingRight: '1.5rem',\n        fontSize: '1rem',\n        verticalAlign: 'middle',\n      },\n    },\n    rows: {\n      style: {\n        minHeight: '80px',\n        fontSize: '1rem',\n        backgroundColor: 'white',\n        '&:nth-of-type(odd)': {\n          backgroundColor: '#fafbfc',\n        },\n        '&:hover': {\n          backgroundColor: '#e8f4ff !important',\n          cursor: 'pointer',\n          transform: 'scale(1.01)',\n          boxShadow: '0 2px 8px rgba(0,0,0,0.1)',\n          transition: 'all 0.3s ease',\n        },\n      },\n    },\n    pagination: {\n      style: {\n        borderTop: '1px solid #dee2e6',\n        padding: '1rem 0',\n      },\n    },\n    table: {\n      style: {\n        marginBottom: '0',\n      },\n    },\n    tableWrapper: {\n      style: {\n        overflow: 'visible',\n      },\n    },\n  };\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  const fetchLabourers = async (pageNumber, size) => {\n    if (!isMounted.current || !service) return;\n    \n    try {\n      setIsLoading(true);\n      setError(null);\n      const response = await searchLabourByCategory(service, pageNumber, size);\n      \n      if (isMounted.current && response) {\n        setLabourers(response.content || []);\n        setTotalPages(response.totalPages || 0);\n        setTotalElements(response.totalElements || 0);\n        setCurrentPage(pageNumber);\n        setPageSize(size);\n      }\n    } catch (error) {\n      if (isMounted.current) {\n        setError('Failed to fetch labourers. Please try again.');\n        console.error('Search error:', error);\n      }\n    } finally {\n      if (isMounted.current) {\n        setIsLoading(false);\n      }\n    }\n  };\n\n  const handlePageChange = (page) => {\n    fetchLabourers(page - 1, pageSize);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    fetchLabourers(page - 1, newPerPage);\n  };\n\n  const handleLabourModalClose = () => {\n    setShowLabourModal(false);\n    setSelectedLabour(null);\n  };\n\n  const handleLabourModalShow = (labour) => {\n    setSelectedLabour(labour);\n    setShowLabourModal(true);\n  };\n\n  const handleBackClick = () => {\n    navigate('/');\n  };\n\n  if (!service) {\n    return (\n      <Container className=\"mt-5\">\n        <div className=\"text-center\">\n          <h3>No service specified</h3>\n          <p className=\"text-muted\">Please go back and select a service.</p>\n          <Button onClick={handleBackClick} className=\"mt-3\">\n            <FaArrowLeft className=\"me-2\" />\n            Back to Home\n          </Button>\n        </div>\n      </Container>\n    );\n  }\n\n  return (\n    <div className=\"labour-list-page\">\n      <Container fluid>\n        {/* Header */}\n        <div className=\"labour-list-header\">\n          <div className=\"d-flex align-items-center\">\n            <Button\n              variant=\"outline-secondary\"\n              onClick={handleBackClick}\n              className=\"me-3\"\n            >\n              <FaArrowLeft />\n            </Button>\n            <h3 className=\"labour-list-title mb-0\">\n              {service} Professionals ({totalElements} found)\n            </h3>\n          </div>\n        </div>\n        \n        <div className=\"labour-list-content\">\n          {isLoading ? (\n            <div className=\"labour-table-container\" style={{ minHeight: '400px' }}>\n              <div className=\"text-center py-5\">\n                <Spinner animation=\"border\" variant=\"primary\" />\n                <p className=\"mt-3\">Loading {service} professionals...</p>\n              </div>\n              {/* Skeleton table structure to prevent layout shift */}\n              <div className=\"skeleton-table\" style={{ opacity: 0.3 }}>\n                <div className=\"skeleton-header\" style={{ height: '50px', background: '#f0f0f0', marginBottom: '10px', borderRadius: '8px' }}></div>\n                <div className=\"skeleton-row\" style={{ height: '60px', background: '#f8f9fa', marginBottom: '8px', borderRadius: '6px' }}></div>\n                <div className=\"skeleton-row\" style={{ height: '60px', background: '#f8f9fa', marginBottom: '8px', borderRadius: '6px' }}></div>\n                <div className=\"skeleton-row\" style={{ height: '60px', background: '#f8f9fa', marginBottom: '8px', borderRadius: '6px' }}></div>\n                <div className=\"skeleton-row\" style={{ height: '60px', background: '#f8f9fa', marginBottom: '8px', borderRadius: '6px' }}></div>\n              </div>\n            </div>\n          ) : error ? (\n            <div className=\"text-center py-5\">\n              <p className=\"text-danger\">{error}</p>\n              <Button onClick={() => fetchLabourers(0, pageSize)}>\n                Try Again\n              </Button>\n            </div>\n          ) : labourers.length === 0 ? (\n            <div className=\"text-center py-5\">\n              <h4>No {service} professionals found</h4>\n              <p className=\"text-muted\">Try searching for a different service or check back later.</p>\n              <Button onClick={handleBackClick}>\n                Back to Home\n              </Button>\n            </div>\n          ) : (\n            <div className=\"labour-table-container\" style={{ minHeight: '400px' }}>\n              <DataTable\n                columns={columns}\n                data={labourers}\n                pagination\n                paginationServer\n                paginationTotalRows={totalElements}\n                onChangePage={handlePageChange}\n                onChangeRowsPerPage={handlePerRowsChange}\n                progressPending={isLoading}\n                responsive\n                customStyles={customStyles}\n                onRowClicked={handleLabourModalShow}\n                noDataComponent={\n                  <div className=\"text-center py-4\">\n                    <p>No labourers found for this service.</p>\n                  </div>\n                }\n              />\n            </div>\n          )}\n        </div>\n      </Container>\n\n      {/* Labour Details Modal */}\n      <LabourDetailsModal\n        show={showLabourModal}\n        onHide={handleLabourModalClose}\n        selectedLabour={selectedLabour}\n      />\n    </div>\n  );\n}\n\nexport default LabourListPage; ","import React, { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst LabourDetailsModal = ({ show, onHide, selectedLabour }) => {\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (show && selectedLabour) {\r\n      // Debug logging to see what data we're receiving\r\n      console.log('LabourDetailsModal - selectedLabour data:', selectedLabour);\r\n      console.log('LabourDetailsModal - Available ID fields:', {\r\n        id: selectedLabour.id,\r\n        labourId: selectedLabour.labourId,\r\n        _id: selectedLabour._id\r\n      });\r\n      \r\n      // Close the modal immediately and navigate to the details page\r\n      onHide();\r\n      const labourId = selectedLabour.id || selectedLabour.labourId || selectedLabour._id || 'unknown';\r\n      console.log('LabourDetailsModal - Navigating to:', `/labour-details/${labourId}`);\r\n      navigate(`/labour-details/${labourId}`);\r\n    }\r\n  }, [show, selectedLabour, onHide, navigate]);\r\n\r\n  // This component now just handles the redirect, no UI needed\r\n  return null;\r\n};\r\n\r\nexport default LabourDetailsModal; "],"names":["baseurl","concat","process","searchLabourByCategory","async","category","pageNumber","arguments","length","undefined","pageSize","sortBy","sortOrder","encodedCategory","encodeURIComponent","endpoint","console","log","axios","post","headers","data","error","_error$response","_error$response$data","Error","response","message","navigate","useNavigate","location","useLocation","isMounted","useRef","labourers","initialLabourers","totalElements","initialTotalElements","totalPages","initialTotalPages","service","currentPage","initialCurrentPage","initialPageSize","initialError","state","setLabourers","useState","isLoading","setIsLoading","setError","setCurrentPage","setTotalPages","setPageSize","setTotalElements","selectedLabour","setSelectedLabour","showLabourModal","setShowLabourModal","columns","name","selector","row","labourName","sortable","cell","_jsxs","className","children","_jsx","FaUser","style","fontSize","labourSkill","FaTools","labourMobileNo","Button","variant","size","onClick","window","href","FaPhone","rating","FaStar","useEffect","current","fetchLabourers","content","handleBackClick","Container","fluid","FaArrowLeft","minHeight","Spinner","animation","opacity","height","background","marginBottom","borderRadius","DataTable","pagination","paginationServer","paginationTotalRows","onChangePage","page","onChangeRowsPerPage","newPerPage","progressPending","responsive","customStyles","headRow","backgroundColor","borderBottom","fontWeight","padding","headCells","paddingLeft","paddingRight","color","cells","verticalAlign","rows","cursor","transform","boxShadow","transition","borderTop","table","tableWrapper","overflow","onRowClicked","labour","noDataComponent","LabourDetailsModal","show","onHide","handleLabourModalClose","_ref","id","labourId","_id"],"sourceRoot":""}